"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[741],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return u}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),c=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=c(t),u=r,g=m["".concat(d,".").concat(u)]||m[u]||p[u]||i;return t?a.createElement(g,l(l({ref:n},s),{},{components:t})):a.createElement(g,l({ref:n},s))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6947:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return d},default:function(){return u},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var a=t(7462),r=t(3366),i=(t(7294),t(3905)),l=["components"],o={title:"Middlewares"},d=void 0,c={unversionedId:"wiki/middlewares",id:"wiki/middlewares",title:"Middlewares",description:"Usage",source:"@site/docs/wiki/middlewares.md",sourceDirName:"wiki",slug:"/wiki/middlewares",permalink:"/protocat/docs/wiki/middlewares",draft:!1,tags:[],version:"current",frontMatter:{title:"Middlewares"},sidebar:"wikiSidebar",previous:{title:"Basic middleware",permalink:"/protocat/docs/wiki/basic-middleware"},next:{title:"Metadata",permalink:"/protocat/docs/wiki/metadata"}},s={},p=[{value:"Usage",id:"usage",level:2},{value:"<code>next</code> function",id:"next-function",level:2},{value:"Call cascading",id:"call-cascading",level:2}],m={toc:p};function u(e){var n=e.components,t=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Middlewares can be registered"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"either globally, with ",(0,i.kt)("inlineCode",{parentName:"li"},"app.use")," for all incoming requests,"),(0,i.kt)("li",{parentName:"ol"},"or at method level with ",(0,i.kt)("inlineCode",{parentName:"li"},"addService"),", where instead of a single handler, an array of handlers can be provided (handler and middleware have the same API).")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"app.use((call, next) => next()) // global middleware\napp.addService(CatService, {\n  getCat: [\n    (call, next) => next(), // getCat middleware\n    (call, next) => next(), // getCat handler\n  ],\n})\n")),(0,i.kt)("div",{className:"admonition admonition-important alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Note that grpc does not provide API to intercept all incoming requests, it only provides handlers to specific RPCs. That is why even global ProtoCat's middlewares do not handle requests that request unimplemented gRPC service for example."))),(0,i.kt)("h2",{id:"next-function"},(0,i.kt)("inlineCode",{parentName:"h2"},"next")," function"),(0,i.kt)("p",null,"Here is an example of a simple logger middleware. Apart from ",(0,i.kt)("inlineCode",{parentName:"p"},"call"),", each middleware (handler alike) receives a ",(0,i.kt)("inlineCode",{parentName:"p"},"next")," function. This is a callstack of all subsequent middlewares and handlers. This feature is demonstrated in a simple logger middleware below."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"app.use(async (call, next) => {\n  const start = performance.now()\n  console.log(` --\x3e ${call.path}`, {\n    request: call.request?.toObject(),\n    clientMetadata: call.metadata.getMap(),\n  })\n  await next()\n  console.log(` <-- ${call.path}`, {\n    response: call.response?.toObject(),\n    durationMillis: performance.now() - start,\n    initialMetadata: call.initialMetadata.getMap(),\n    trailingMetadata: call.trailingMetadata.getMap(),\n  })\n})\n")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Unless you want to stop execution of the subsequent middlewares, you must call ",(0,i.kt)("inlineCode",{parentName:"p"},"next"),". Not awaiting (or returning) it will probably result in unexpected behavior, especially in calls without server-streaming."))),(0,i.kt)("h2",{id:"call-cascading"},"Call cascading"),(0,i.kt)("p",null,"All middlewares are executed in the order they were registered, followed by an execution of handlers in provided order, regardless of middleware-service order. Note that in the following example, ",(0,i.kt)("inlineCode",{parentName:"p"},"C")," middleware is registered after ",(0,i.kt)("inlineCode",{parentName:"p"},"CatService")," and it is still called, even before the handlers."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},"app.use(async (call, next) => {\n  console.log('A1')\n  await next()\n  console.log('A2')\n})\napp.use(async (call, next) => {\n  console.log('B1')\n  await next()\n  console.log('B2')\n})\napp.addService(CatService, {\n  getCat: [\n    async (call, next) => {\n      console.log('D1')\n      await next()\n      console.log('D2')\n    },\n    async (call, next) => {\n      console.log('E1')\n      await next()\n      console.log('E2')\n    },\n  ],\n})\napp.use(async (call, next) => {\n  console.log('C1')\n  await next()\n  console.log('C2')\n})\n\n// --\x3e getCat\n// A1            (middleware)\n//   B1          (middleware)\n//     C1        (middleware)\n//       D1      (handler)\n//         E1    (handler)\n//         E2    (handler)\n//       D2      (handler)\n//     C2        (middleware)\n//   B2          (middleware)\n// A2            (middleware)\n")))}u.isMDXComponent=!0}}]);